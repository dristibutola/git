#git add .                    = adds all unstaged in the repository
#git add "*.txt"              = adds all txt files in the repository
#git add *.txt                = adds all txt files in the current
                                directory inside the repository
#git diff                     = shows unstaged differences since last commit
#git add \*.txt               = same as git add "*.txt"
#git remote add --track         master upstream git://github.com/upstreamname/projectname.git
                              =[Optional] but very useful if plan on working in project further .
                                Use the following commands to add the 'upstream'(original
                                project location) as remote branch so that you can get their
                                updates into your branch .
#git fetch upstream            =    to get code
#git merge upstream/master     = to merge the changes that took place in original project into my cloned repository
#git branch branchname         = to make a branch
#git checkout branchname       =  to enter a branch

####how to squash commits###
Before submitting pull request back upstream , it is nice to squash bad comits into well labelled ones.

#git rebase -i HEAD~3
_______This will bring an editor with some text looking--
---pick df94881 Allow install to SD
---pick a7323e5 README Junkyism
---pick 3ead26f rm classpath from git

_______To squash____
______change the contents to___
pick df94881 Allow install to SD
squash a7323e5 README Junkyism
squash 3ead26f rm classpath from git

to pull all changes from remote repository     = git pull --all
to delete a  branch  locally                   =  git branch -d branchname
to delete a branch remotely                    =  git push origin delete -- branchname
